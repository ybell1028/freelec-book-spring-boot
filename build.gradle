buildscript {
    //  ext => build.gradle에 사용하는 전역변수를 설정하겠다
    // 여기서는 springBootVersion 전역변수를 생성하고 그 값을 2.1.7.RELEASE로 하겠다는 의미이다.
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    // repositories는 각종 의존성(라이브러리)들을 어떤 원격 저장소에서 받을지를 정합니다.
    // 기본적으로 mavenCentral을 많이 사용하지만, 최근에는 라이브러리 업로드 난이도 때문에 jcenter도 많이 사용합니다.
    repositories {
        mavenCentral()
        jcenter()
    }
    // 즉, spring-boot-gradle-plugin의 2.1.7.RELEASE를 의존성으로 받겠다는 의미이다.
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.jd.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
// 즉, spring-boot-gradle-plugin의 2.1.7.RELEASE를 의존성으로 받겠다는 의미이다.
// 의존성 코드는 특정 버전을 명시하지 않아야 맨위에 작성한 springBootVersion 전역변수로 설정되어
// 각 라이브러리들의 버전 관리가 한곳에 집중되고, 버전 충돌 문제도 해결되어 편하게 개발을 진행할 수 있다.
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    //스프링 부트용 Spring Data Jpa 추상화 라이브러리 입니다.
    //스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리해줍니다.
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //h2 - 인메모리 관계형 데이터베이스입니다.
    //별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있습니다.
    //메모리에서 실행되기 때문에 앱을 재시작할 때마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용합니다.
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-devtools')
    //소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현시 필요한 의존성입니다.
    //spring-security-oauth2-client와 spring-security-oauth2-jose를 기본으로 관리해줍니다.
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}