#Travis 설정을 위한 파일입니다.
#YAML은 간단히 말하자면 JSON에서 괄호를 제거한 것입니다.

language: java
jdk:
  - openjdk8

#Travis CI 서버의 HOME
#그레이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, **같은 의존성은 다음 배포때부터 다시 받지 않도록** 설정합니다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

#main 브랜치에 푸시되었을 때 수행하는 명령어입니다.
#여기서는 프로젝트 내부에 둔 gradlew을 통해 clean & build를 수행합니다.
script: "./gradlew clean build"

#deploy 명령어가 실행되기 전에 수행됩니다
#Travis CI는 S3로 특정 파일만 업로드가 안됩니다. - 디렉토리 단위로만 업로드할 수 있기 떄문에 before-deploy 디렉토리는 항상 생성합니다.
before_deploy:
  - mkdir -p before-deploy #zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/ #before-deploy에는 zip 파일에 포함시킬 파일들을 저장합니다.
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * #before-deploy로 이동한 후 전체 압축
  - cd ../ && mkdir -p deploy #상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/freelec-book-spring-boot.zip #deploy로 zip파일 이동

#S3로 파일 업로드 혹은 CodeDeploy로 배포 등 **외부 서비스와 연동될 행위들을 선언합니다.**

#acl - zip 파일 접근을 private으로
#local_dir before_deploy에서 생성한 디렉토리를 지정, 해당 위치의 파일들만 S3로 전송합니다.
deploy:
  - provider: s3
    on:
      all_branches: true # 대신 이렇게 바꿔줌
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: freelec-spring-boot-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy
    wait-until-deployed: true

  - provider: codedeploy
    on:
      all_branches: true
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: freelec-spring-boot-build #S3 버킷
    key: freelec-book-spring-boot.zip #빌드 파일을 압축해서 전달
    bundle_type: zip #압축 확장자
    application: freelec-book-spring-boot #웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: freelec-book-spring-boot-group #웹 콘솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true

before_install:
  - chmod +x gradlew

#CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - ybell1028@gmail.com